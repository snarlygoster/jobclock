# Set up development

  git clone git@github.com:snarlygoster/jobclock.git jobclock
  ls jobclock
  virtualenv --no-site-packages jobclock
  cd jobclock
  . bin/activate
  pip install "Django>=1.3"
  pip install django-extensions
  pip install Werkzeug

  mkdir db     # sqlite directory, check settings.py for location
  ./manage.py syncdb



http://blog.cerris.com/2008/08/18/doing-tdd-in-django/
http://toastdriven.com/blog/2011/apr/10/guide-to-testing-in-django/
February 20, 2012 01:44:54 PST: working tests started
https://docs.djangoproject.com/en/dev/topics/forms/modelforms/

2012-02-23-1120: pip install PyYAML

def get_form(self, form_class):
     form = super(MyView, self).get_form(form_class)
     form.fields['place'].querset = Place....
     return form

works with Django 1.4
roll back to 1.3 for crispy forms
https://github.com/maraujop/django-crispy-forms

 http://django-crispy-forms.readthedocs.org/en/latest/faq.html

https://github.com/danfairs/django-lazysignup
http://www.b-list.org/weblog/2007/nov/04/working-models/

2012-03-12-1152 install south, add timeclock and run first migration
2012-03-15-1031 create new estimate to activity
  customer fills in estimate questionnaire, provides email address, system returns ticket number
  new estimate ticket shows in job management list as "estimate request"
  bindery manager reviews job with customer,
    job is accepted and queued for clockpunch
    or estimate is closed (no job).
  job collects clock punches until complete.
  bindery manager marks job as complete, system moves job data to next report and archive.
 
 
for wp in wpa:
...   if wp.worker in total:
...     total[wp.worker] = total[wp.worker] + wp.duration
...   else:
...     total[wp.worker] = wp.duration
... 



import datetime
dates[6] + datetime.timedelta(1)
dates[6] + datetime.timedelta(2)

dates = ClockPunch.objects.dates('timestamp','day')

for day in dates:
  print day
  for punch in ClockPunch.objects.filter(timestamp__range=(day,day + datetime.timedelta(1))).order_by('timestamp'):
    print punch
exit()
 
 
# format timedelta
':'.join(str(td).split(':')[:2])


hours, remainder = divmod(s, 3600)
minutes, seconds = divmod(remainder, 60)
print '%s:%s:%s' % (hours, minutes, seconds)